<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igalaxy.boot.mapper.auth.AuthUserRoleMapper">
    <select id="queryPage" parameterType="map" resultType="AuthUserRole">
        select t.* from v_auth_user_role t
        where t.disabled = 0 and t.roleId = #{roleId}
        <if test="txtUserName != null">
            and t.userName like CONCAT('%', #{txtUserName},'%')
        </if>

        <if test="txtUserAccount != null">
            and t.account like CONCAT('%', #{txtUserAccount},'%')
        </if>
        order by id desc
        <include refid="Pager.mysqlPage"/>
    </select>

    <select id="queryPageCount" parameterType="map" resultType="int">
        select count(*) from v_auth_user_role t
        where t.disabled = 0 and t.roleId = #{roleId}
        <if test="txtUserName != null">
            and t.userName like CONCAT('%', #{txtUserName},'%')
        </if>

        <if test="txtUserAccount != null">
            and t.account like CONCAT('%', #{txtUserAccount},'%')
        </if>
    </select>

    <select id="selectNoUserInRole" parameterType="long" resultType="AuthUserRole">
        SELECT
        t.`id` userId,
        t.`name` userName,
        t.`account`
        FROM
        tb_usr_user t
        LEFT JOIN v_auth_user_role r
        ON t.`id` = r.`userId`
        AND r.`disabled` = 0
        AND r.`roleId` = #{roleId}
        WHERE t.`disabled` = 0
        AND r.`id` IS NULL
    </select>

    <insert id="save" parameterType="AuthUserRole" useGeneratedKeys="true" keyProperty="id">
        insert into tb_auth_user_role
        (userId, roleId, createTime, createUser, updateTime, updateUser, disabled)
        values(#{userId}, #{roleId}, #{createTime}, #{createUser}, #{updateTime}, #{updateUser}, 0)
    </insert>

    <update id="delete" parameterType="AuthUserRole">
        update tb_auth_user_role t
        set t.updateTime = #{updateTime},
        t.updateUser = #{updateUser},
        t.disabled = 1
        where t.id = #{id}
    </update>

    <select id="queryById" parameterType="long" resultType="AuthUserRole">
        select t.* from v_auth_user_role t
        where t.id = #{id}
    </select>
</mapper>